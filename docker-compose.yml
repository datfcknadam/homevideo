version: '3.4'
x-base:
  &base
  networks:
    - docker_net
  restart: always
x-postgres-env:
  &postgres-env
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_HOST: ${POSTGRES_HOST}

services:
  frontend:
    build: ./frontend
    container_name: frontend
  webserver:
    <<: *base
    build:
      context: ./backend/services/webserver
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend/services/webserver/src:/usr/app/webserver/src
      - ./backend/data:/usr/app/webserver/data
    container_name: webserver
  nginx:
    <<: *base
    build: ./backend/infra/nginx
    volumes:
      - ./backend/data/movies:/static/movies
      - ./backend/logs/nginx/:/var/log/nginx
      - ./frontend:/frontend
    ports:
      - 80:80
    command: nginx -g "daemon off;"
    restart: always
    depends_on:
      - webserver
  postgres:
    <<: *base
    image: postgres:12.2-alpine
    environment:
      <<: *postgres-env
    ports:
      - '5432:5432'
    volumes:
      - ./backend/data/postgres:/var/lib/postgresql/data
  # frontend:
  #   <<: *base
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 11.0.0.0/24